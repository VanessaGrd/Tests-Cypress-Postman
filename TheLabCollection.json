{
	"info": {
		"_postman_id": "051990f6-f351-46ff-9d0e-a962c28511df",
		"name": "The Lab",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26848014",
		"_collection_link": "https://vanessa-3360.postman.co/workspace/vanessa-Workspace~4e6c72d6-c153-49c6-85d1-4c3dd4b1e84a/collection/26848014-051990f6-f351-46ff-9d0e-a962c28511df?action=share&source=collection_link&creator=26848014"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Register user",
					"item": [
						{
							"name": "Add User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"    pm.expect(res.error).to.equal(\"Duplicate entry 'vanessa.test@gmail.com' for key 'user.email'\")",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "lastname",
											"value": "{{lastname}}",
											"type": "text"
										},
										{
											"key": "firstname",
											"value": "{{firstname}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "birthday",
											"value": "{{birthday}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User - duplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "lastname",
											"value": "{{lastname}}",
											"type": "text"
										},
										{
											"key": "firstname",
											"value": "{{firstname}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "birthday",
											"value": "{{birthday}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User - no password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"    pm.expect(res.error).to.equal(\"Duplicate entry 'vanessa.test@gmail.com' for key 'user.email'\")",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "lastname",
											"value": "{{lastname}}",
											"type": "text"
										},
										{
											"key": "firstname",
											"value": "{{firstname}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "birthday",
											"value": "{{birthday}}",
											"type": "text"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User - no email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"    pm.expect(res.error).to.equal(\"Column 'email' cannot be null\")",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "lastname",
											"value": "{{lastname}}",
											"type": "text"
										},
										{
											"key": "firstname",
											"value": "{{firstname}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "birthday",
											"value": "{{birthday}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User - no lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"    pm.expect(res.error).to.equal(\"Column 'lastname' cannot be null\")",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "firstname",
											"value": "{{firstname}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "birthday",
											"value": "{{birthday}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User - no firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"    pm.expect(res.error).to.equal(\"Column 'firstname' cannot be null\")",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "lastname",
											"value": "{{lastname}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "birthday",
											"value": "{{birthday}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User - no birthday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"    pm.expect(res.error).to.equal(\"Column 'birthday' cannot be null\")",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "lastname",
											"value": "{{lastname}}",
											"type": "text"
										},
										{
											"key": "firstname",
											"value": "{{firstname}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": ":{{password}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login user",
					"item": [
						{
							"name": "Login user - false password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.collectionVariables.set(\"token\", res.token)",
											"    pm.expect(res.token).to.exist",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(res.message).to.equal(\"verifier vos informations\")",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "\"123456715515189\"",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login user - false email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.collectionVariables.set(\"token\", res.token)",
											"    pm.expect(res.token).to.exist",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(res.message).to.equal(\"l'adresse mail n'existe pas\")",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "\"vanessaaaaaa@gmail.com\"",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login user - no email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.collectionVariables.set(\"token\", res.token)",
											"    pm.expect(res.token).to.exist",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(res.error).to.equal(\"Email and password are required\")",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login user - no password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.collectionVariables.set(\"token\", res.token)",
											"    pm.expect(res.token).to.exist",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(res.error).to.equal(\"Email and password are required\")",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"pm.environment.set(\"token\", res.token);",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.collectionVariables.set(\"token\", res.token)",
											"    pm.expect(res.token).to.exist",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update user",
					"item": [
						{
							"name": "update user without password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(res.message).to.equal(\"Utilisateur modifié avec succès\")",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"    pm.expect(res.error).to.equal(\"Duplicate entry 'vanessa.test@gmail.com' for key 'user.email'\")",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoxMywiaWF0IjoxNzIwNjE1NTI0LCJleHAiOjE3MjA2MTkxMjR9.WlNBPCKHkkIF43dF_9v6JZBvslpxpEa20w_u9MRdhXA",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "lastname",
											"value": "\"Bernard\"",
											"type": "text"
										},
										{
											"key": "firstname",
											"value": "\"Sophie\"",
											"type": "text"
										},
										{
											"key": "email",
											"value": "\"sophie.bernard@example.com\"",
											"type": "text"
										},
										{
											"key": "hashedpassword",
											"value": "\"Sophie111!\"",
											"type": "text"
										},
										{
											"key": "birthday",
											"value": "\"2000-03-02\"",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get profile",
					"item": [
						{
							"name": "get profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(res.message).to.equal(\"Welcome to THE LAB Test !\");",
											"    pm.expect(res.isLogged).to.be.a(\"boolean\");",
											"    pm.expect(res.data.id).to.be.a(\"number\");",
											"    pm.expect(res.data.lastname).to.be.a(\"string\");",
											"    pm.expect(res.data.firstname).to.be.a(\"string\");",
											"     pm.expect(res.data.email).to.be.a(\"string\");",
											"    pm.expect(res.data.is_admin).to.be.a(\"string\");",
											"     pm.expect(res.data.birthday).to.be.a(\"string\");",
											"    pm.expect(res.data.status).to.be.a(\"string\");",
											"    pm.expect(res.data.created_at).to.be.a(\"date\")",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoxNSwiaWF0IjoxNzIwNjIwNTExLCJleHAiOjE3MjA2MjQxMTF9.qR_g3LIwXhRecp5XuV1mQCr9slbF-DP4Qcffsf-pdoQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete user",
					"item": [
						{
							"name": "Delete user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(res.message).to.equal(\"La suppression de l'utilisateur a été effectuée avec succès\")",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoxNSwiaWF0IjoxNzIwNjIwNTExLCJleHAiOjE3MjA2MjQxMTF9.qR_g3LIwXhRecp5XuV1mQCr9slbF-DP4Qcffsf-pdoQ",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete user without authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()",
											"const status = pm.response.code",
											"",
											"if (status === 200) {",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"} else if (status === 404) {",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"} else if (status === 401) {",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(res.error).to.equal(\"Vous n'avez pas les droits\");",
											"});",
											"} else if (status === 500) {",
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"})",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjoxMywiaWF0IjoxNzIwNjIxNzQyLCJleHAiOjE3MjA2MjUzNDJ9.PRo5FA0mqOt0eXKdhlonUJdDSY3PTNqmhxkYchqclh4",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5555/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "firstname",
			"value": "{{firstname}}",
			"type": "string"
		},
		{
			"key": "lastname",
			"value": "{{lastname}}",
			"type": "string"
		},
		{
			"key": "email",
			"value": "{{email}}",
			"type": "string"
		},
		{
			"key": "password",
			"value": "{{password}}",
			"type": "string"
		},
		{
			"key": "is_admin",
			"value": "{{isAdmin}}",
			"type": "string"
		},
		{
			"key": "birthday",
			"value": "{{birthday}}",
			"type": "string"
		}
	]
}